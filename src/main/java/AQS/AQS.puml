@startuml

title ReentranLock 加锁

box "ReentrantLock" #LightBlue
participant "lock()" as RLock
end box

box "Sync类" #LightGreen
participant "lock()" as SLock
end box

box "NonfairSync" #LightPink
participant "lock()" as NFLock
participant "tryAcquire()" as NfTAc
end box

box "AQS"  #LightYellow
participant "acquire()" as AQSAc
end box

box "AbstractOwnableSynchronizer"  #Orange
participant setExclusiveOwnerThread as setEx
end box




RLock -> SLock:  加锁

group 第一次加锁
SLock --> NFLock: 先判断CAS,成功\n则设置独占者线程
NFLock -> setEx: 将当前线程设置为独占者线程,\n以避免第一次进来就加锁，\n向OS申请资源
end

group 第二次加锁
    group 独占者线程继续加锁
    SLock --> NFLock: CAS返回false
    NFLock -> AQSAc
    AQSAc -> NfTAc:
    end
    group 其他线程加锁
    SLock --> NFLock: 先判断CAS,成功\n则设置独占者线程
    NFLock -> setEx: 将当前线程设置为独占者线程,\n以避免第一次进来就加锁，\n向OS申请资源
    end

end
@enduml